openapi: 3.0.0
info:
  title: EventHub API
  version: 1.0.0
  description: |
    REST API do zarządzania wydarzeniami (EventHub).
    - Organizatorzy mogą CRUDować eventy.
    - Uczestnicy mogą przeglądać eventy i tworzyć rezerwacje.
servers:
  - url: http://localhost:8080/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegister:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum:
            - organizer
            - participant
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        token:
          type: string
    Event:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        capacity:
          type: integer
        organizer_id:
          type: integer
    EventRequest:
      type: object
      required:
        - title
        - description
        - date
        - capacity
      properties:
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        capacity:
          type: integer
    Reservation:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        event_id:
          type: integer
        tickets:
          type: integer
        created_at:
          type: string
          format: date-time
    ReservationRequest:
      type: object
      required:
        - event_id
        - tickets
      properties:
        event_id:
          type: integer
        tickets:
          type: integer
paths:
  /auth/register:
    post:
      summary: Rejestracja nowego użytkownika
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: Użytkownik zarejestrowany
        '400':
          description: Błąd walidacji danych
  /auth/login:
    post:
      summary: Logowanie użytkownika, zwraca JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Zwraca token JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Błędny JSON
        '401':
          description: Niepoprawne dane logowania
  /events:
    get:
      summary: Pobierz listę wszystkich wydarzeń
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista eventów
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '401':
          description: Brak lub nieprawidłowy token
    post:
      summary: Utwórz nowe wydarzenie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
      responses:
        '201':
          description: Event utworzony
        '400':
          description: Błąd walidacji danych
        '401':
          description: Brak lub nieprawidłowy token
        '403':
          description: Użytkownik nie ma roli organizatora
  /events/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    get:
      summary: Pobierz szczegóły wydarzenia
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Szczegóły eventu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '401':
          description: Brak lub nieprawidłowy token
        '404':
          description: Wydarzenie nie znalezione
    put:
      summary: Aktualizuj istniejące wydarzenie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
      responses:
        '200':
          description: Event zaktualizowany
        '400':
          description: Błędny JSON
        '401':
          description: Brak lub nieprawidłowy token
        '403':
          description: Brak uprawnień do modyfikacji
        '404':
          description: Wydarzenie nie znalezione
    delete:
      summary: Usuń wydarzenie
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Event usunięty
        '401':
          description: Brak lub nieprawidłowy token
        '403':
          description: Brak uprawnień do usunięcia
        '404':
          description: Wydarzenie nie znalezione
  /reservations:
    get:
      summary: Lista rezerwacji zalogowanego użytkownika
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista rezerwacji
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
        '401':
          description: Brak lub nieprawidłowy token
    post:
      summary: Utwórz rezerwację na wydarzenie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        '201':
          description: Rezerwacja utworzona
        '400':
          description: Błędny JSON
        '401':
          description: Brak lub nieprawidłowy token
        '403':
          description: Brak uprawnień (rola participant wymagana)
